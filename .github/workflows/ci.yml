name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: ⚡ Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        
    - name: 📦 Install dependencies
      run: uv sync
      
    - name: 🔍 Run Ruff linter
      id: ruff
      run: |
        echo "Running Ruff linter..."
        uv run ruff check --output-format=github
      continue-on-error: true
      
    - name: 🎨 Check code formatting with Black
      id: black
      run: |
        echo "Checking code formatting..."
        uv run black . --check --diff --color
      continue-on-error: true
      
    - name: 📝 Type checking with mypy (optional)
      id: mypy
      run: |
        echo "Running type checking..."
        uv run mypy src/ --ignore-missing-imports || echo "⚠️ mypy not configured or failed"
      continue-on-error: true
      
    - name: 📊 Code Quality Summary
      run: |
        echo "## 📊 Code Quality Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.ruff.outcome }}" == "success" ]; then
          echo "✅ **Ruff linting**: PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Ruff linting**: FAILED" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ steps.black.outcome }}" == "success" ]; then
          echo "✅ **Black formatting**: PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Black formatting**: FAILED" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🛠️ How to fix issues:" >> $GITHUB_STEP_SUMMARY
        echo "- **Fix linting**: \`uv run ruff check --fix\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Fix formatting**: \`uv run black .\`" >> $GITHUB_STEP_SUMMARY
        
    - name: ❌ Fail if quality checks failed
      if: steps.ruff.outcome == 'failure' || steps.black.outcome == 'failure'
      run: |
        echo "💥 Code quality checks failed!"
        echo "Please run the following commands to fix issues:"
        echo "  uv run ruff check --fix"
        echo "  uv run black ."
        exit 1
        
    - name: ✅ All checks passed
      if: steps.ruff.outcome == 'success' && steps.black.outcome == 'success'
      run: echo "🎉 All code quality checks passed!"

  # Проверка безопасности (опционально)
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: ⚡ Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: 🔒 Run security scan with bandit
      run: |
        uv add --dev bandit
        uv run bandit -r src/ -f json || echo "⚠️ Security scan completed with warnings"
      continue-on-error: true
